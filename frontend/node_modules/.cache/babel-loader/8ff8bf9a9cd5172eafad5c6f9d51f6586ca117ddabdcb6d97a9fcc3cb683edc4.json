{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\projects\\\\Mern_Blog_Naman-master\\\\frontend\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\n// PostPage.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { formatISO9075 } from 'date-fns';\nimport { UserContext } from '../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const {\n    id\n  } = useParams();\n  const [contentEditVerify, setcontentEditVerify] = useState(\"false\");\n  useEffect(() => {\n    contentToEdit();\n  }, []);\n  let contentToEdit = async () => {\n    let data = id;\n    const response1 = await fetch(`http://localhost:4000/post/${id}`, {\n      method: 'GET'\n    });\n    const json1 = await response1.json();\n    const response2 = await fetch(`http://localhost:4000/profile`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"token\": localStorage.getItem('token')\n      })\n    });\n    const json2 = await response2.json();\n    console.log(json2.userId, json1.author._id);\n    if (json2.userId == json1.author._id) {\n      setcontentEditVerify(\"true\");\n    }\n    console.log(contentEditVerify);\n  };\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch post');\n      }\n      return response.json();\n    }).then(postData => {\n      if (postData && postData.createdAt) {\n        setPostInfo({\n          ...postData,\n          createdAt: new Date(postData.createdAt)\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (!postInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  function postTitleEdit() {\n    let btn = document.getElementById(\"h1-title\");\n    if (contentEditVerify == \"true\") {\n      btn.addEventListener(\"click\", function () {\n        this.contentEditable = \"true\";\n        this.focus();\n      });\n      btn.addEventListener(\"blur\", async function () {\n        this.contentEditable = \"false\";\n        let data = {\n          \"toEdit\": \"title\",\n          \"value\": this.innerText,\n          \"id\": id\n        };\n        try {\n          const response = await fetch('http://localhost:4000/post/update', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          const json = await response.json();\n        } catch (error) {\n          //console.error(error);\n        }\n      });\n    }\n  }\n  function postContentEdit() {\n    if (contentEditVerify == \"true\") {\n      let btn = document.getElementById(\"content\");\n      btn.addEventListener(\"click\", function () {\n        this.contentEditable = \"true\";\n        this.focus();\n      });\n      btn.addEventListener(\"blur\", async function () {\n        this.contentEditable = \"false\";\n        let data = {\n          \"toEdit\": \"content\",\n          \"value\": this.innerText,\n          \"id\": id\n        };\n        try {\n          const response = await fetch('http://localhost:4000/post/update', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          const json = await response.json();\n        } catch (error) {\n          //console.error(error);\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"h1-title\",\n      onClick: postTitleEdit,\n      contentEditable: contentEditVerify,\n      children: postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: formatISO9075(postInfo.createdAt)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [\"By \", postInfo.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${postInfo.cover}`,\n        alt: \"Image Cannot be Displayed\",\n        id: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      id: \"content\",\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      },\n      onClick: postContentEdit,\n      contenteditable: contentEditVerify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"BLFYadStSC1Wy47LuORS7ubc5mA=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","Link","formatISO9075","UserContext","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","loading","setLoading","userInfo","id","contentEditVerify","setcontentEditVerify","contentToEdit","data","response1","fetch","method","json1","json","response2","headers","body","JSON","stringify","localStorage","getItem","json2","console","log","userId","author","_id","then","response","ok","Error","postData","createdAt","Date","catch","error","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","postTitleEdit","btn","document","getElementById","addEventListener","contentEditable","focus","innerText","postContentEdit","className","onClick","title","username","src","cover","alt","dangerouslySetInnerHTML","__html","content","contenteditable","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/projects/Mern_Blog_Naman-master/frontend/src/pages/PostPage.js"],"sourcesContent":["// PostPage.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { formatISO9075 } from 'date-fns';\nimport { UserContext } from '../UserContext';\n\nconst PostPage = () => {\n  const [postInfo, setPostInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { userInfo } = useContext(UserContext);\n  const { id } = useParams();\n\n  const [contentEditVerify,setcontentEditVerify]=useState(\"false\");\n\n  useEffect(()=>{\n    contentToEdit();\n  },[])\n\n  let contentToEdit=async()=>{\n    let data=id;\n    const response1=await fetch(`http://localhost:4000/post/${id}`,{\n      method:'GET'\n    });\n    const json1=await response1.json();\n\n    const response2=await fetch(`http://localhost:4000/profile`,{\n      method:'POST',\n      headers:{\n        'Content-Type':'application/json'\n      },\n      body:JSON.stringify({\"token\":localStorage.getItem('token')})\n    });\n    const json2=await response2.json();\n    console.log(json2.userId,json1.author._id)\n    if(json2.userId==json1.author._id){\n      setcontentEditVerify(\"true\");\n    }\n    console.log(contentEditVerify)\n  }\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetch(`http://localhost:4000/post/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch post');\n        }\n        return response.json();\n      })\n      .then(postData => {\n        if (postData && postData.createdAt) {\n          setPostInfo({\n            ...postData,\n            createdAt: new Date(postData.createdAt),\n          });\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [id]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!postInfo) {\n    return <div>Error loading post</div>;\n  }\n\n  function postTitleEdit() {\n    let btn = document.getElementById(\"h1-title\");\n    if(contentEditVerify==\"true\"){\n      btn.addEventListener(\"click\", function () {\n        this.contentEditable = \"true\";\n        this.focus();\n      });\n    \n      btn.addEventListener(\"blur\", async function() {\n        this.contentEditable = \"false\";\n        let data = {\n          \"toEdit\": \"title\",\n          \"value\": this.innerText,\n          \"id\": id\n        };\n        try {\n          const response = await fetch('http://localhost:4000/post/update', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          const json = await response.json();\n        } catch (error) {\n          //console.error(error);\n        }\n      });  \n    }\n  }\n\n\n  function postContentEdit() {\n    if(contentEditVerify==\"true\")\n    {\n      let btn = document.getElementById(\"content\");\n      btn.addEventListener(\"click\", function () {\n        this.contentEditable = \"true\";\n        this.focus();\n      });\n    \n      btn.addEventListener(\"blur\", async function() {\n        this.contentEditable = \"false\";\n        let data = {\n          \"toEdit\": \"content\",\n          \"value\": this.innerText,\n          \"id\": id\n        };\n        try {\n          const response = await fetch('http://localhost:4000/post/update', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n          const json = await response.json();\n        } catch (error) {\n          //console.error(error);\n        }\n      });  \n    }\n  }\n\n  return (\n    <div className='post-page'>\n      <h1 id=\"h1-title\" onClick={postTitleEdit} contentEditable={contentEditVerify}>{postInfo.title}</h1>\n      <time>{formatISO9075(postInfo.createdAt)}</time>\n      <div className='author'>By {postInfo.author.username}</div>\n      <div className='image'>\n        <img src={`http://localhost:4000/${postInfo.cover}`} alt='Image Cannot be Displayed' id=\"image\"/>\n      </div>\n      <div\n        className='content' id='content'\n        dangerouslySetInnerHTML={{ __html: postInfo.content }}\n        onClick={postContentEdit} contenteditable={contentEditVerify}/>\n    </div>\n  );\n};\n\nexport default PostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}